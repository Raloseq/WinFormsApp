//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Szpital.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SaveEmployeeToFile", ReplyAction="http://tempuri.org/IService1/SaveEmployeeToFileResponse")]
        void SaveEmployeeToFile(string employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SaveEmployeeToFile", ReplyAction="http://tempuri.org/IService1/SaveEmployeeToFileResponse")]
        System.Threading.Tasks.Task SaveEmployeeToFileAsync(string employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteEmployeeFromFile", ReplyAction="http://tempuri.org/IService1/DeleteEmployeeFromFileResponse")]
        void DeleteEmployeeFromFile(string employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteEmployeeFromFile", ReplyAction="http://tempuri.org/IService1/DeleteEmployeeFromFileResponse")]
        System.Threading.Tasks.Task DeleteEmployeeFromFileAsync(string employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateEmployeeInFile", ReplyAction="http://tempuri.org/IService1/UpdateEmployeeInFileResponse")]
        void UpdateEmployeeInFile(string employee, string updated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateEmployeeInFile", ReplyAction="http://tempuri.org/IService1/UpdateEmployeeInFileResponse")]
        System.Threading.Tasks.Task UpdateEmployeeInFileAsync(string employee, string updated);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Backup", ReplyAction="http://tempuri.org/IService1/BackupResponse")]
        string Backup();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Backup", ReplyAction="http://tempuri.org/IService1/BackupResponse")]
        System.Threading.Tasks.Task<string> BackupAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Szpital.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Szpital.ServiceReference1.IService1>, Szpital.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SaveEmployeeToFile(string employee) {
            base.Channel.SaveEmployeeToFile(employee);
        }
        
        public System.Threading.Tasks.Task SaveEmployeeToFileAsync(string employee) {
            return base.Channel.SaveEmployeeToFileAsync(employee);
        }
        
        public void DeleteEmployeeFromFile(string employee) {
            base.Channel.DeleteEmployeeFromFile(employee);
        }
        
        public System.Threading.Tasks.Task DeleteEmployeeFromFileAsync(string employee) {
            return base.Channel.DeleteEmployeeFromFileAsync(employee);
        }
        
        public void UpdateEmployeeInFile(string employee, string updated) {
            base.Channel.UpdateEmployeeInFile(employee, updated);
        }
        
        public System.Threading.Tasks.Task UpdateEmployeeInFileAsync(string employee, string updated) {
            return base.Channel.UpdateEmployeeInFileAsync(employee, updated);
        }
        
        public string Backup() {
            return base.Channel.Backup();
        }
        
        public System.Threading.Tasks.Task<string> BackupAsync() {
            return base.Channel.BackupAsync();
        }
    }
}
